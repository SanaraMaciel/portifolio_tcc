@model ProjetoIntranet.Models.Entity.CadastroMenu
@Recursos.Resources.Culture

@{
    ViewBag.Title = "AdicionarLinks";
    var culture = System.Threading.Thread.CurrentThread.CurrentUICulture.Name.ToLowerInvariant();
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@helper selected(string c, string culture, string View = "AdicionarLinks")
{
if (c == culture)
{
        @:checked="checked"
    }
}

<div class="row">
    @using (Html.BeginForm("SetCulture", "Menu", new { View = "AdicionarLinks" }))
    {

        <div id="language-icons" class="col-md-offset-10 col-sm-offset-10">
            <button href="" id="pt-Br" value="pt-Br" selected("pt-Br", culture) name="culture" type="submit">
                <img src="~/Resources/pt_br.png" alt="ícone bandeira Brasileira" title="@Recursos.Resources.Portugues" type="submit" />

            </button>
            <button href="" id="en-us" value="en-us" selected("en-us", culture) type="submit" name="culture">
                <img src="~/Resources/en_us.png" alt="ícone bandeira Americana" title="@Recursos.Resources.Ingles" type="submit" />
            </button>
        </div>
    }
</div>
<h2>@Recursos.Resources.AdicionarLinks</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@Recursos.Resources.CadastroMenus</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" }) <br>
            <div class="col-md-10">
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
            </div>
        </div>

        
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="btn_salvar_url" value="@Recursos.Resources.Salvar"  class="btn btn-success">

                <input type="reset" value="@Recursos.Resources.Cancelar" class="btn btn-danger">
            </div>
        </div>
    </div>

    

}





<div class="container ajuda">
    <div class="modal fade" id="feedBackModalURL" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">

                <div class="alert alert-success" role="alert" style="margin-bottom:0px;">
                    <span class="glyphicon glyphicon-ok-sign" aria-hidden="true"></span>
                    <span class="sr-only">Error:</span>
                    <b>@Recursos.Resources.URLSalva</b>
                </div>

            </div>
        </div>
    </div>
</div>


<div class="container ajuda">
    <div class="modal fade" id="feedBackModalVazio" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">

                <div class="alert alert-danger" role="alert" style="margin-bottom:0px;">
                    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                    <span class="sr-only">Error:</span>
                    <b>@Recursos.Resources.ErroCampo  </b>
                </div>

            </div>
        </div>
    </div>
</div>