@model ProjetoIntranet.Models.Entity.Postagem
@Recursos.Resources.Culture

@{
    ViewBag.Title = "EditarRascunho";
    var culture = System.Threading.Thread.CurrentThread.CurrentUICulture.Name.ToLowerInvariant();
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@helper selected(string c, string culture, string View = "EditarRascunho")
{
if (c == culture)
{
        @:checked="checked"
    }
}



<div class="row">
    @using (Html.BeginForm("SetCulture", "Postagens", new { View = "EditarRascunho" }))
    {

        <div id="language-icons" class="col-md-offset-10 col-sm-offset-10">
            <button href="" id="pt-Br" value="pt-Br" selected("pt-Br", culture) name="culture" type="submit">
                <img src="~/Resources/pt_br.png" alt="ícone bandeira Brasileira" title="@Recursos.Resources.Portugues" type="submit" />

            </button>
            <button href="" id="en-us" value="en-us" selected("en-us", culture) type="submit" name="culture">
                <img src="~/Resources/en_us.png" alt="ícone bandeira Americana" title="@Recursos.Resources.Ingles" type="submit" />
            </button>
        </div>
    }
</div>

<h2>@Recursos.Resources.EditarRascunho</h2>

@using (Html.BeginForm("EditarRascunho", "Postagens", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-group" ,@id="formEditar"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.corpo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               
                 @Html.TextAreaFor(model => model.corpo,  new { @class = "form-control" ,@id="txaCorpo" } )
                @Html.ValidationMessageFor(model => model.corpo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.titulo, new { htmlAttributes = new { @class = "form-control", @id ="tit" } })
                @Html.ValidationMessageFor(model => model.titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.etiqueta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.etiqueta, new { htmlAttributes = new { @class = "form-control", @id ="etiq" } })
                @Html.ValidationMessageFor(model => model.etiqueta, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <br>
            <label for="file">@Recursos.Resources.EnviarImagens</label>
            <input type="file" name="imagens" id="imagens" multiple><br><br>
            <br>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" value="Salvar" class="btn btn-success" >
                <span class="glyphicon glyphicon-ok">@Recursos.Resources.Enviar </span></button>
            </div>
        </div>
    </div>
}

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
